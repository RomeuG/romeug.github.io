#+TITLE: Emdee Five for Life
#+AUTHOR: Romeu Vieira

#+OPTIONS: html-style:nil
#+OPTIONS: html-scripts:nil

#+OPTIONS: author:nil
#+OPTIONS: email:nil
#+OPTIONS: date:t

#+PROPERTY: header-args :eval no

#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="/style.css"/>

#+EXPORT_FILE_NAME: emdee-five-for-life

In this challenge we are presented with a webpage that has a string that should
be hashed using MD5 and then submitted.

When we test manually, and submit the MD5 hash, we are presented with the same
screen with an extra string saying =Too slow!=.

I guess we can always write a script to submit the hash as fast as we can.
So we can write a Bash Script like this:

#+begin_src sh
#!/bin/sh

# We get the first string to hash
FIRSTHASH=$(curl-s http://209.97.138.240:32106/ | xmllint --html --format --xpath "//h3/text()" - 2> /dev/null)

while true
do
        # we hash the string
        MD5=$(md5str $FIRSTHASH)
        # we execute CURL and save XML
        XML=$(curl-X POST --data "hash=$MD5" http://209.97.138.240:32106/)
        echo $XML

        # we get a new string to hash for the next iteration
        FIRSTHASH=$(echo $XML | xmllint --html --format --xpath "//h3/text()" - 2> /dev/null)
done
#+end_src

The =md5str= is a script of mine also:

#+begin_src sh
#!/bin/sh
echo -n $1 | md5sum | awk '{print $1}'
#+end_src

The script could be better, but it does the job.
When we run the script, we can see the output of the XML being echoed into the
terminal.

For some reason, it still has the same string =Too slow!=.

Could it be the script that is actually very slow? Does this challenge need 1GBit internet
to be solved?

Well, if we look up closely after doing a request to the website in the browser,
we can see that there is a session Cookie being used called =PHPSESSID= that is
always different when we do the request through cURL. So the trick here is to
actually use the same cookie value.

We can change the script to accomodate this needed change:

#+begin_src sh
#!/bin/sh

# we added --cookie-jar cookies to save cookies to file called `cookies`
FIRSTHASH=$(curl --cookie-jar cookies -s http://209.97.138.240:32106/ | xmllint --html --format --xpath "//h3/text()" - 2> /dev/null)

while true
do
        MD5=$(md5str $FIRSTHASH)
        # we load the `cookies` file here
        XML=$(curl -b cookies -X POST --data "hash=$MD5" http://209.97.138.240:32106/)
        #echo $MD5
        echo $XML

        FIRSTHASH=$(echo $XML | xmllint --html --format --xpath "//h3/text()" - 2> /dev/null)
done
#+end_src

Now we just run the script again and the flag will appear instead of the usual text =Too slow!=.

#+BEGIN_EXPORT html
<hr>
<footer>
<p><a class="footer" href="/index.html">Homepage</a></p>
<p><a class="footer" href="/writeups/htb/index.html">Back</a></p>
</footer>
#+END_EXPORT
